/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as mainRouteRouteImport } from './routes/(main)/route'
import { Route as mainIndexRouteImport } from './routes/(main)/index'
import { Route as AuthCallbackRouteImport } from './routes/auth/callback'

const mainRouteRoute = mainRouteRouteImport.update({
  id: '/(main)',
  getParentRoute: () => rootRouteImport,
} as any)
const mainIndexRoute = mainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => mainRouteRoute,
} as any)
const AuthCallbackRoute = AuthCallbackRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof mainIndexRoute
  '/auth/callback': typeof AuthCallbackRoute
}
export interface FileRoutesByTo {
  '/auth/callback': typeof AuthCallbackRoute
  '/': typeof mainIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/(main)': typeof mainRouteRouteWithChildren
  '/auth/callback': typeof AuthCallbackRoute
  '/(main)/': typeof mainIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth/callback'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth/callback' | '/'
  id: '__root__' | '/(main)' | '/auth/callback' | '/(main)/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  mainRouteRoute: typeof mainRouteRouteWithChildren
  AuthCallbackRoute: typeof AuthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(main)': {
      id: '/(main)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mainRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(main)/': {
      id: '/(main)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof mainIndexRouteImport
      parentRoute: typeof mainRouteRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface mainRouteRouteChildren {
  mainIndexRoute: typeof mainIndexRoute
}

const mainRouteRouteChildren: mainRouteRouteChildren = {
  mainIndexRoute: mainIndexRoute,
}

const mainRouteRouteWithChildren = mainRouteRoute._addFileChildren(
  mainRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  mainRouteRoute: mainRouteRouteWithChildren,
  AuthCallbackRoute: AuthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
